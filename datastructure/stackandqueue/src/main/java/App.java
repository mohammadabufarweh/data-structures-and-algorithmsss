/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        System.out.println("------------------Stack------------------");
        Stack<Integer> sl = new Stack<>();
        Stack<Integer> ssl = new Stack<>();
//        Stack<Character> sls = new Stack<>();
        sl.push(1);
        sl.push(2);
        sl.push(3);
        sl.push(4);
//        sls.pushChacr('s');
//        sls.pushChacr('a');


        System.out.println("------------------push Stack------------------");
        System.out.println(sl );
        System.out.println("------------------pop Stack------------------");
        sl.pop();
//        ssl.pop();
//        System.out.println(ssl);
        System.out.println("------------------peek Stack------------------");
        System.out.println(sl.peek());
        System.out.println(sl.peek());
        System.out.println("------------------isempty Stack------------------");
        System.out.println(sl.isEmpty());
        System.out.println("-------------------------------------------");
        System.out.println("------------------Queue-----------------");
        System.out.println("-------------------------------------------");
        Queue<Integer> ql = new Queue<>();
        ql.enqueue(1);
        ql.enqueue(2);
        ql.enqueue(3);
        ql.enqueue(4);
        System.out.println("------------------enqueue-----------------");
        System.out.println(ql);
        System.out.println("-------------------dequeue------------------");
        ql.dequeue();
        System.out.println(ql);
        System.out.println("------------------peeks------------------");
        System.out.println(ql.peek());
        System.out.println("------------------isempty--------------------");
        System.out.println(ql.isEmpty());
        System.out.println("-------------------------------------------");
        System.out.println("------------------pseudo-----------------");
        System.out.println("-------------------------------------------");
        Stack<Integer> slq = new Stack<>();
        slq.push(1);
        slq.push(2);
        slq.push(3);
        slq.push(4);
        Pseudo pseudo = new Pseudo();
        pseudo.enqueue(1);
        pseudo.enqueue(2);
        pseudo.enqueue(3);
        pseudo.enqueue(4);
        System.out.println("------------------enqueue--------------------");
//        System.out.println(pseudo.);
        System.out.println(pseudo.stack1.toString());
        pseudo.dequeue();
        System.out.println("------------------dequeue--------------------");
        System.out.println(pseudo.stack1.toString());

        System.out.println("-------------------------------------------");
        System.out.println("------------------ValidateBrackets-----------------");
        System.out.println("-------------------------------------------");
        ValidateBrackets validateBrackets=new ValidateBrackets();
        String bracketssss = "{{}}()[()]{";
        String bracketsss = "{{}}()[()]";
        String bracketss= "(][)";
        String brackets = ")";
        String b="{(})";
        String p="{{{}}}((()))[[[[]]]]";
        String oo="{(})";
        System.out.println(ValidateBrackets.validateBrackets(oo)) ;
//        System.out.println(ValidateBrackets.validateBrackets(bracketsss)) ;
//        System.out.println(ValidateBrackets.validateBrackets(bracketss)) ;
//        System.out.println(ValidateBrackets.validateBrackets(brackets)) ;
//        System.out.println(ValidateBrackets.validateBrackets(b)) ;
//        System.out.println(ValidateBrackets.validateBrackets(p)) ;
        System.out.println("-------------------------------------------");
        System.out.println("------------------Animal-----------------");
        System.out.println("-------------------------------------------");
        Cat cat1 = new Cat("sheraz");
        Cat cat2 = new Cat("shahenaz");
        Cat cat3 = new Cat("zaza");
        Dog dog1 = new Dog("mosha3'eb");
        Dog dog2 = new Dog("molakem");
        Dog dog3 = new Dog("kalb");
        AnimalShelter as = new AnimalShelter();
        as.animals.toString();
        as.enqueue(cat1);
        as.enqueue(cat2);
        as.enqueue(cat3);
        as.enqueue(dog1);
        as.enqueue(dog2);
        as.enqueue(dog3);
        System.out.println("------------------enqueue--------------------");
        System.out.println(as.animals.toString());
        System.out.println("------------------dequeue neither cat and dogs---------------");
        System.out.println(as.dequeue("lion shamshom"));
        System.out.println("------------------dequeue--------------------");
        System.out.println(as.dequeue("cat"));
        System.out.println("------------------dequeue--------------------");
        System.out.println(as.animals.toString());


    }
}
